name: Application CI
on:
    push:
        branches:
            - develop
jobs:
    pipeline:
        name: projetBibliotheque pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.16.1
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: Install node.js packages
              run: npm install
            - name: Run backend test
              run: |
                  chmod +x mvnw
                  ./mvnw -ntp clean verify -P-webpack
            - name: Run frontend test
              run: npm run test-ci
            - name: Analyze code with SonarQube
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                  if [ -n $SONAR_TOKEN ]; then
                      ./mvnw -ntp initialize sonar:sonar -Dsonar.organization=hugoj78 -Dsonar.host.url=https://sonarcloud.io
                  else
                      echo No SONAR_TOKEN, skipping...
                  fi
            - name: Package application
              env: 
                  JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
                  JFROG_USER: ${{ secrets.JFROG_USER }}
              run: |
                  java -version
                  echo "-------------------PREVIOUS SETTINGS.xml------------------------------"
                  cat ~/.m2/settings.xml
                  echo "-------------------PREVIOUS SETTINGS.xml------------------------------"
                  mv src/main/settings/settings.myartifactory.xml ~/.m2/settings.xml
                  echo "-------------------NEW SETTINGS.xml------------------------------"
                  cat ~/.m2/settings.xml
                  echo "-------------------NEW SETTINGS.xml------------------------------"
                  ./mvnw -ntp package deploy -Pprod -DskipTests
                  
              #mvn -ntp package deploy -Pprod -DskipTests
                    
    jobs_2:
      name: Deploy to Heroku
     #needs: pipeline
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: akhileshns/heroku-deploy@v3.6.8 # This is the action
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: ${{secrets.HEROKU_APP_NAME_DEV}} #Must be unique in Heroku
            heroku_email: ${{secrets.HEROKU_EMAIL}}
            branch: "develop"
            buildpack: ${{secrets.HEROKU_BUILD_PACK}}
